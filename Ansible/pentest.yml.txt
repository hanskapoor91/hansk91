---
  - name: Config elk VM with Docker
    hosts: elk
    remote_user: hkapoorcbc
    become: true
    tasks:
    # install docker.io
    - name: Install docker.io
      apt:
        force_apt_get: yes
        update_cache: yes
        name: docker.io
        state: present
    # install python3-pip
    - name: Install pip
      apt:
        force_apt_get: yes
        name: python3-pip
        state: present
    # install docker python pip module
    - name: Install docker
      pip:
        name: docker
        state: present
    # increase memory
    - name: Use more memory
      sysctl:
        name: vm.max_map_count
        value: "262144"
        state: present
        reload: yes
    # increase virtual memory on restart
    - shell:
        echo "vm.max_map_count=262144" >> /etc/sysctl.conf
    # install sebp/elk:761 container
    - name: Install and run a docker elk container
      docker_container:
        name: elk
        image: sebp/elk:761
        state: started
        restart_policy: always
        published_ports:
          - 5601:5601
          - 9200:9200
          - 5044:5044
    # enable service docker on boot
    - name: Enable service docker on boot
      systemd:
        name: docker
        enabled: yes
root@05a4b76c2bc2:/etc/ansible# ls
ansible.cfg  elktest.yml  filebeat-7.6.1-amd64.deb  files  hosts  pentest.yml  roles
root@05a4b76c2bc2:/etc/ansible# cat hosts
# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers.

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group

[webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110
10.0.0.5 ansible_python_interpreter=/usr/bin/python3
10.0.0.6 ansible_python_interpreter=/usr/bin/python3
        10.0.0.7 ansible_python_interpreter=/usr/bin/python3
[elk]
10.1.0.4 ansible_python_interpreter=/usr/bin/python3
# If you have multiple hosts following a pattern you can specify
# them like this:

## www[001:006].example.com

# Ex 3: A collection of database servers in the 'dbservers' group

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57

# Here's another example of host ranges, this time there are no
# leading 0s:

## db-[99:101]-node.example.com

root@05a4b76c2bc2:/etc/ansible# ls
ansible.cfg  elktest.yml  filebeat-7.6.1-amd64.deb  files  hosts  pentest.yml  roles
root@05a4b76c2bc2:/etc/ansible# cat pentest.yml
---

- name: Config Web VM with Docker
  hosts: webservers
  become: true
  tasks:
  - name: docker.io
    apt:
      force_apt_get: yes
      update_cache: yes
      name: docker.io
      state: present

  - name: Install pip3
    apt:
     force_apt_get: yes
     name: python3-pip
     state: present
  - name: Install Python Docker module
    pip:
      name: docker
      state: present

  - name: download and launch a docker web container
    docker_container:
     name: dvwa
     image: cyberxsecurity/dvwa
     state: started
     restart_policy: always
     published_ports: 80:80

  - name: Enable docker service
    systemd:
      name: docker
      enabled: yes